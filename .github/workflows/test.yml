# https://docs.github.com/en/actions
# https://docs.github.com/en/actions/migrating-to-github-actions/migrating-from-gitlab-cicd-to-github-actions

name: Test

on: [ push ]

env:
  FILES_TO_CHECK: 'elegor.py points.py'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ubuntu-20.04, windows-2022, macos-11] # no bash on windows
        os: [ ubuntu-20.04, macos-11, ubuntu-18.04, macos-10.15]
        python-version: [ "3.10", "3.9", "3.8" ]
    steps:
      - uses: actions/checkout@v2

        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
      - name: Cache packages
        uses: actions/cache@v2
        env:
          cache-name: cache-python
        with:
          path: |
            venv
            ~/.cache/pip
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ matrix.os }}-python-${{ matrix.python-version }}-
            ${{ matrix.os }}-python-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-tools
          pip-compile requirements.in
          cat requirements.txt
          pip-compile requirements-dev.in
          cat requirements-dev.txt
          python -V
          python -m pip install virtualenv
          if [ ! -e venv ]; then virtualenv venv; fi
          source venv/bin/activate
          python -m pip install --upgrade --upgrade-strategy eager -r requirements.txt
          python -m pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt
          python -m pip freeze
          mkdir -p test-reports/{pylint,flake8,safety,mypy} || true
          env

      # https://pylint.org/
      - name: Pylint - Code analysis
        run: |
          mkdir -p test-reports/pylint || true
          source venv/bin/activate
          pylint --output-format=json:test-reports/pylint/pylint.json,colorized --fail-under=8 $FILES_TO_CHECK

      # http://mypy-lang.org/
      # https://mypy.readthedocs.io/en/stable/command_line.html
      - name: Mypy - Static type checker
        run: |
          source venv/bin/activate
          python -m mypy --pretty --ignore-missing-imports $FILES_TO_CHECK | tee test-reports/mypy/mypy_report.log

      #    - name: Setuptools test
      #      run: |
      #        python setup.py test

      # https://flake8.pycqa.org/en/latest/
      # https://flake8.pycqa.org/en/latest/user/invocation.html
      - name: Flake8 - Style Guide Enforcement
        run: |
          source venv/bin/activate
          mkdir -p test-reports/flake8 || true
          FLAKE_OPTIONS="--max-line-length=120 --max-complexity 8"
          FLAKE_IGNORE="--ignore E501,E501"
          FLAKE_OPTIONS+=" $FLAKE_IGNORE"
          flake8 --tee --output-file=test-reports/flake8/flake8.txt $FLAKE_OPTIONS $FILES_TO_CHECK
          flake8_junit               test-reports/flake8/flake8.txt test-reports/flake8/flake8_junit.xml

      # https://github.com/pyupio/safety
      - name: Safety - Vulnerabilities checking
        run: |
          source venv/bin/activate
          # numpy would fail: https://github.com/pyupio/safety-db/issues/2349
          safety check --full-report --ignore=44715 | tee test-reports/safety/safety_report.log

      - name: Unittest
        run: |
          source venv/bin/activate
          python -m unittest

      # https://docs.pytest.org/
      - name: Pytest - Python testing tool that helps you write better programs
        run: |
          source venv/bin/activate
          pytest

#      - name: Pytest Coverage
#        run: |
#          source venv/bin/activate
#          pytest --cov-report term-missing --cov=${src_dir}

      - name: Archive test reports
        uses: actions/upload-artifact@v2
        with:
          name: elegor_test-reports_${{ matrix.os }}-python-${{ matrix.python-version }}
          path: test-reports/**/*.*

      - name: Archive requirements
        uses: actions/upload-artifact@v2
        with:
          name: requirements_${{ matrix.os }}-python-${{ matrix.python-version }}
          path: requirements*.txt
